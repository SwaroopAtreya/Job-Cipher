{
  "version": 3,
  "sources": ["../../@aws-sdk/lib-dynamodb/dist-es/commands/utils.js", "../../@aws-sdk/lib-dynamodb/dist-es/baseCommand/DynamoDBDocumentClientCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/BatchExecuteStatementCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/BatchGetCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/BatchWriteCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/DeleteCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/ExecuteStatementCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/ExecuteTransactionCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/GetCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/PutCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/QueryCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/ScanCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/TransactGetCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/TransactWriteCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/commands/UpdateCommand.js", "../../@aws-sdk/lib-dynamodb/dist-es/DynamoDBDocumentClient.js", "../../@aws-sdk/lib-dynamodb/dist-es/DynamoDBDocument.js", "../../@aws-sdk/lib-dynamodb/dist-es/pagination/QueryPaginator.js", "../../@aws-sdk/lib-dynamodb/dist-es/pagination/ScanPaginator.js"],
  "sourcesContent": ["import { marshall, unmarshall } from \"@aws-sdk/util-dynamodb\";\nexport const SELF = null;\nexport const ALL_VALUES = {};\nexport const ALL_MEMBERS = [];\nconst NEXT_LEVEL = \"*\";\nconst processObj = (obj, processFunc, keyNodes) => {\n    if (obj !== undefined) {\n        if (keyNodes == null) {\n            return processFunc(obj);\n        }\n        else {\n            const keys = Object.keys(keyNodes);\n            const goToNextLevel = keys.length === 1 && keys[0] === NEXT_LEVEL;\n            const someChildren = keys.length >= 1 && !goToNextLevel;\n            const allChildren = keys.length === 0;\n            if (someChildren) {\n                return processKeysInObj(obj, processFunc, keyNodes);\n            }\n            else if (allChildren) {\n                return processAllKeysInObj(obj, processFunc, SELF);\n            }\n            else if (goToNextLevel) {\n                return Object.entries(obj ?? {}).reduce((acc, [k, v]) => {\n                    if (typeof v !== \"function\") {\n                        acc[k] = processObj(v, processFunc, keyNodes[NEXT_LEVEL]);\n                    }\n                    return acc;\n                }, (Array.isArray(obj) ? [] : {}));\n            }\n        }\n    }\n    return undefined;\n};\nconst processKeysInObj = (obj, processFunc, keyNodes) => {\n    let accumulator;\n    if (Array.isArray(obj)) {\n        accumulator = obj.filter((item) => typeof item !== \"function\");\n    }\n    else {\n        accumulator = {};\n        for (const [k, v] of Object.entries(obj)) {\n            if (typeof v !== \"function\") {\n                accumulator[k] = v;\n            }\n        }\n    }\n    for (const [nodeKey, nodes] of Object.entries(keyNodes)) {\n        if (typeof obj[nodeKey] === \"function\") {\n            continue;\n        }\n        const processedValue = processObj(obj[nodeKey], processFunc, nodes);\n        if (processedValue !== undefined && typeof processedValue !== \"function\") {\n            accumulator[nodeKey] = processedValue;\n        }\n    }\n    return accumulator;\n};\nconst processAllKeysInObj = (obj, processFunc, keyNodes) => {\n    if (Array.isArray(obj)) {\n        return obj.filter((item) => typeof item !== \"function\").map((item) => processObj(item, processFunc, keyNodes));\n    }\n    return Object.entries(obj).reduce((acc, [key, value]) => {\n        if (typeof value === \"function\") {\n            return acc;\n        }\n        const processedValue = processObj(value, processFunc, keyNodes);\n        if (processedValue !== undefined && typeof processedValue !== \"function\") {\n            acc[key] = processedValue;\n        }\n        return acc;\n    }, {});\n};\nexport const marshallInput = (obj, keyNodes, options) => {\n    const marshallFunc = (toMarshall) => marshall(toMarshall, options);\n    return processKeysInObj(obj, marshallFunc, keyNodes);\n};\nexport const unmarshallOutput = (obj, keyNodes, options) => {\n    const unmarshallFunc = (toMarshall) => unmarshall(toMarshall, options);\n    return processKeysInObj(obj, unmarshallFunc, keyNodes);\n};\n", "import { setFeature } from \"@aws-sdk/core\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { marshallInput, unmarshallOutput } from \"../commands/utils\";\nexport class DynamoDBDocumentClientCommand extends $Command {\n    addMarshallingMiddleware(configuration) {\n        const { marshallOptions = {}, unmarshallOptions = {} } = configuration.translateConfig || {};\n        marshallOptions.convertTopLevelContainer = marshallOptions.convertTopLevelContainer ?? true;\n        unmarshallOptions.convertWithoutMapWrapper = unmarshallOptions.convertWithoutMapWrapper ?? true;\n        this.clientCommand.middlewareStack.addRelativeTo((next, context) => async (args) => {\n            setFeature(context, \"DDB_MAPPER\", \"d\");\n            args.input = marshallInput(args.input, this.inputKeyNodes, marshallOptions);\n            return next(args);\n        }, {\n            name: \"DocumentMarshall\",\n            relation: \"before\",\n            toMiddleware: \"serializerMiddleware\",\n            override: true,\n        });\n        this.clientCommand.middlewareStack.addRelativeTo((next, context) => async (args) => {\n            const deserialized = await next(args);\n            deserialized.output = unmarshallOutput(deserialized.output, this.outputKeyNodes, unmarshallOptions);\n            return deserialized;\n        }, {\n            name: \"DocumentUnmarshall\",\n            relation: \"before\",\n            toMiddleware: \"deserializerMiddleware\",\n            override: true,\n        });\n    }\n}\n", "import { BatchExecuteStatementCommand as __BatchExecuteStatementCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class BatchExecuteStatementCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Statements: {\n            \"*\": {\n                Parameters: ALL_MEMBERS,\n            },\n        },\n    };\n    outputKeyNodes = {\n        Responses: {\n            \"*\": {\n                Error: {\n                    Item: ALL_VALUES,\n                },\n                Item: ALL_VALUES,\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __BatchExecuteStatementCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { BatchGetItemCommand as __BatchGetItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class BatchGetCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        RequestItems: {\n            \"*\": {\n                Keys: {\n                    \"*\": ALL_VALUES,\n                },\n            },\n        },\n    };\n    outputKeyNodes = {\n        Responses: {\n            \"*\": {\n                \"*\": ALL_VALUES,\n            },\n        },\n        UnprocessedKeys: {\n            \"*\": {\n                Keys: {\n                    \"*\": ALL_VALUES,\n                },\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __BatchGetItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { BatchWriteItemCommand as __BatchWriteItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class BatchWriteCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        RequestItems: {\n            \"*\": {\n                \"*\": {\n                    PutRequest: {\n                        Item: ALL_VALUES,\n                    },\n                    DeleteRequest: {\n                        Key: ALL_VALUES,\n                    },\n                },\n            },\n        },\n    };\n    outputKeyNodes = {\n        UnprocessedItems: {\n            \"*\": {\n                \"*\": {\n                    PutRequest: {\n                        Item: ALL_VALUES,\n                    },\n                    DeleteRequest: {\n                        Key: ALL_VALUES,\n                    },\n                },\n            },\n        },\n        ItemCollectionMetrics: {\n            \"*\": {\n                \"*\": {\n                    ItemCollectionKey: ALL_VALUES,\n                },\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __BatchWriteItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { DeleteItemCommand as __DeleteItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES, SELF } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class DeleteCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Key: ALL_VALUES,\n        Expected: {\n            \"*\": {\n                Value: SELF,\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        ExpressionAttributeValues: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Attributes: ALL_VALUES,\n        ItemCollectionMetrics: {\n            ItemCollectionKey: ALL_VALUES,\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __DeleteItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { ExecuteStatementCommand as __ExecuteStatementCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class ExecuteStatementCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Parameters: ALL_MEMBERS,\n    };\n    outputKeyNodes = {\n        Items: {\n            \"*\": ALL_VALUES,\n        },\n        LastEvaluatedKey: ALL_VALUES,\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __ExecuteStatementCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { ExecuteTransactionCommand as __ExecuteTransactionCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class ExecuteTransactionCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        TransactStatements: {\n            \"*\": {\n                Parameters: ALL_MEMBERS,\n            },\n        },\n    };\n    outputKeyNodes = {\n        Responses: {\n            \"*\": {\n                Item: ALL_VALUES,\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __ExecuteTransactionCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { GetItemCommand as __GetItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class GetCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Key: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Item: ALL_VALUES,\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __GetItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { PutItemCommand as __PutItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES, SELF } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class PutCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Item: ALL_VALUES,\n        Expected: {\n            \"*\": {\n                Value: SELF,\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        ExpressionAttributeValues: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Attributes: ALL_VALUES,\n        ItemCollectionMetrics: {\n            ItemCollectionKey: ALL_VALUES,\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __PutItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { QueryCommand as __QueryCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class QueryCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        KeyConditions: {\n            \"*\": {\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        QueryFilter: {\n            \"*\": {\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        ExclusiveStartKey: ALL_VALUES,\n        ExpressionAttributeValues: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Items: {\n            \"*\": ALL_VALUES,\n        },\n        LastEvaluatedKey: ALL_VALUES,\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __QueryCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { ScanCommand as __ScanCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class ScanCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        ScanFilter: {\n            \"*\": {\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        ExclusiveStartKey: ALL_VALUES,\n        ExpressionAttributeValues: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Items: {\n            \"*\": ALL_VALUES,\n        },\n        LastEvaluatedKey: ALL_VALUES,\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __ScanCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { TransactGetItemsCommand as __TransactGetItemsCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class TransactGetCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        TransactItems: {\n            \"*\": {\n                Get: {\n                    Key: ALL_VALUES,\n                },\n            },\n        },\n    };\n    outputKeyNodes = {\n        Responses: {\n            \"*\": {\n                Item: ALL_VALUES,\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __TransactGetItemsCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { TransactWriteItemsCommand as __TransactWriteItemsCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class TransactWriteCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        TransactItems: {\n            \"*\": {\n                ConditionCheck: {\n                    Key: ALL_VALUES,\n                    ExpressionAttributeValues: ALL_VALUES,\n                },\n                Put: {\n                    Item: ALL_VALUES,\n                    ExpressionAttributeValues: ALL_VALUES,\n                },\n                Delete: {\n                    Key: ALL_VALUES,\n                    ExpressionAttributeValues: ALL_VALUES,\n                },\n                Update: {\n                    Key: ALL_VALUES,\n                    ExpressionAttributeValues: ALL_VALUES,\n                },\n            },\n        },\n    };\n    outputKeyNodes = {\n        ItemCollectionMetrics: {\n            \"*\": {\n                \"*\": {\n                    ItemCollectionKey: ALL_VALUES,\n                },\n            },\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __TransactWriteItemsCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { UpdateItemCommand as __UpdateItemCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_MEMBERS, ALL_VALUES, SELF } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class UpdateCommand extends DynamoDBDocumentClientCommand {\n    input;\n    inputKeyNodes = {\n        Key: ALL_VALUES,\n        AttributeUpdates: {\n            \"*\": {\n                Value: SELF,\n            },\n        },\n        Expected: {\n            \"*\": {\n                Value: SELF,\n                AttributeValueList: ALL_MEMBERS,\n            },\n        },\n        ExpressionAttributeValues: ALL_VALUES,\n    };\n    outputKeyNodes = {\n        Attributes: ALL_VALUES,\n        ItemCollectionMetrics: {\n            ItemCollectionKey: ALL_VALUES,\n        },\n    };\n    clientCommand;\n    middlewareStack;\n    constructor(input) {\n        super();\n        this.input = input;\n        this.clientCommand = new __UpdateItemCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n", "import { Client as __Client } from \"@smithy/smithy-client\";\nexport { __Client };\nexport class DynamoDBDocumentClient extends __Client {\n    config;\n    constructor(client, translateConfig) {\n        super(client.config);\n        this.config = client.config;\n        this.config.translateConfig = translateConfig;\n        this.middlewareStack = client.middlewareStack;\n        if (this.config?.cacheMiddleware) {\n            throw new Error(\"@aws-sdk/lib-dynamodb - cacheMiddleware=true is not compatible with the\" +\n                \" DynamoDBDocumentClient. This option must be set to false.\");\n        }\n    }\n    static from(client, translateConfig) {\n        return new DynamoDBDocumentClient(client, translateConfig);\n    }\n    destroy() {\n    }\n}\n", "import { BatchExecuteStatementCommand, } from \"./commands/BatchExecuteStatementCommand\";\nimport { BatchGetCommand } from \"./commands/BatchGetCommand\";\nimport { BatchWriteCommand } from \"./commands/BatchWriteCommand\";\nimport { DeleteCommand } from \"./commands/DeleteCommand\";\nimport { ExecuteStatementCommand, } from \"./commands/ExecuteStatementCommand\";\nimport { ExecuteTransactionCommand, } from \"./commands/ExecuteTransactionCommand\";\nimport { GetCommand } from \"./commands/GetCommand\";\nimport { PutCommand } from \"./commands/PutCommand\";\nimport { QueryCommand } from \"./commands/QueryCommand\";\nimport { ScanCommand } from \"./commands/ScanCommand\";\nimport { TransactGetCommand } from \"./commands/TransactGetCommand\";\nimport { TransactWriteCommand, } from \"./commands/TransactWriteCommand\";\nimport { UpdateCommand } from \"./commands/UpdateCommand\";\nimport { DynamoDBDocumentClient } from \"./DynamoDBDocumentClient\";\nexport class DynamoDBDocument extends DynamoDBDocumentClient {\n    static from(client, translateConfig) {\n        return new DynamoDBDocument(client, translateConfig);\n    }\n    batchExecuteStatement(args, optionsOrCb, cb) {\n        const command = new BatchExecuteStatementCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    batchGet(args, optionsOrCb, cb) {\n        const command = new BatchGetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    batchWrite(args, optionsOrCb, cb) {\n        const command = new BatchWriteCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    delete(args, optionsOrCb, cb) {\n        const command = new DeleteCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    executeStatement(args, optionsOrCb, cb) {\n        const command = new ExecuteStatementCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    executeTransaction(args, optionsOrCb, cb) {\n        const command = new ExecuteTransactionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    get(args, optionsOrCb, cb) {\n        const command = new GetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    put(args, optionsOrCb, cb) {\n        const command = new PutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    query(args, optionsOrCb, cb) {\n        const command = new QueryCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    scan(args, optionsOrCb, cb) {\n        const command = new ScanCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    transactGet(args, optionsOrCb, cb) {\n        const command = new TransactGetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    transactWrite(args, optionsOrCb, cb) {\n        const command = new TransactWriteCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    update(args, optionsOrCb, cb) {\n        const command = new UpdateCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\") {\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            }\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\n", "import { createPaginator } from \"@smithy/core\";\nimport { QueryCommand } from \"../commands/QueryCommand\";\nimport { DynamoDBDocumentClient } from \"../DynamoDBDocumentClient\";\nexport const paginateQuery = createPaginator(DynamoDBDocumentClient, QueryCommand, \"ExclusiveStartKey\", \"LastEvaluatedKey\", \"Limit\");\n", "import { createPaginator } from \"@smithy/core\";\nimport { ScanCommand } from \"../commands/ScanCommand\";\nimport { DynamoDBDocumentClient } from \"../DynamoDBDocumentClient\";\nexport const paginateScan = createPaginator(DynamoDBDocumentClient, ScanCommand, \"ExclusiveStartKey\", \"LastEvaluatedKey\", \"Limit\");\n"],
  "mappings": "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",
  "names": ["BatchExecuteStatementCommand", "ExecuteStatementCommand", "ExecuteTransactionCommand", "QueryCommand", "ScanCommand", "BatchExecuteStatementCommand", "ExecuteStatementCommand", "ExecuteTransactionCommand", "QueryCommand", "ScanCommand", "QueryCommand", "ScanCommand"]
}
